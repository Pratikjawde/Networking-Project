name: Terraform & Ansible Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Terraform manually
      run: |
        curl -fsSL https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip -o terraform.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        sudo chmod +x /usr/local/bin/terraform
        echo "/usr/local/bin" >> $GITHUB_PATH  # Add Terraform to the PATH
        terraform --version  # Verify installation


    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        pip3 install ansible

    - name: Cache Terraform dependencies
      uses: actions/cache@v3
      with:
        path: ~/.terraform.d/plugins
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Install dependencies (Terraform providers)
      run: |
        terraform init

  validate-terraform:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: project/infrastructure

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: project/infrastructure
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  ansible-deploy:
    runs-on: ubuntu-latest
    needs: [validate-terraform]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-1'

    - name: Get EC2 Instance Public IP
      id: get_ip
      run: |
        PUBLIC_IP=$(aws ec2 describe-instances --instance-ids i-00d3f8139f992340d --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV  # Save IP as environment variable

    - name: Update Ansible Inventory
      run: |
        sed -i "s/<dynamic-ip>/$PUBLIC_IP/" project/configuration/host.ini

    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i project/configuration/host.ini project/configuration/playbook.yml


  # ansible-deploy:
  #   runs-on: ubuntu-latest
  #   needs: [validate-terraform]
    
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v3

  #   - name: Set up SSH for Ansible (if required)
  #     run: |
  #       mkdir -p ~/.ssh
  #       echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa

  #   - name: Run Ansible Playbook
  #     run: |
  #       ansible-playbook -i project/configuration/host.ini project/configuration/playbook.yml

  deploy-to-aws:
    runs-on: ubuntu-latest
    needs: [validate-terraform, ansible-deploy]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: 'eu-west-1'  # Specify the AWS region

    - name: Deploy Infrastructure with Terraform
      run: |
        terraform apply -auto-approve
