name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r project/application/requirements.txt
    - name: Run tests
      run: |
        # Add your test commands here
        echo "Running tests..."
    - name: Build Docker image
      run: |
        docker build -t sample-app project/application/
    # - name: Login to Amazon ECR
    #   uses: aws-actions/amazon-ecr-login@v1
    #   with:
    #     mask-password: true
    #     registry-type: private
    #     skip-logout: false
    #   env:
    #     AWS_REGION: eu-west-1  
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    # - name: Get ECR Login and Registry URI
    #   id: ecr-login
    #   uses: aws-actions/amazon-ecr-login@v1
    #   env:
    #     AWS_REGION: eu-west-1
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # - name: Retrieve ECR Registry URI
    #   id: ecr-info
    #   run: |
    #     echo "ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV
    
    # - name: Tag and Push Docker Image
      # env:
      #   ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
      #   ECR_REPOSITORY: sample-app
      #   IMAGE_TAG: latest
      # run: |
      #   docker tag sample-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #   docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1  # Set your AWS region here
    
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Retrieve AWS Account ID and Set ECR Registry
      id: ecr-info
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
        echo "ECR_REGISTRY=${ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com" >> $GITHUB_ENV
    
    - name: Tag and Push Docker Image
      env:
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        ECR_REPOSITORY: sample-app
        IMAGE_TAG: latest
      run: |
        echo "Using Registry: $ECR_REGISTRY"
        docker tag sample-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    # - name: Build, tag, and push image to ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: sample-app
    #     IMAGE_TAG: latest
    #   run: |
    #     docker tag sample-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

 
